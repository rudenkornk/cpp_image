name: Workflow
on:
  workflow_dispatch:
    inputs:
      deploy:
        description: "Should this run deploy image"
        required: false
        default: 'false'
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
jobs:
  build:
    runs-on: "ubuntu-20.04"
    env:
      registry: docker.io/
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Show machine info
      run: |
        id
        df -h
        docker image ls
        docker container ls
        docker container ls --all
    - name: Install prerequisites
      run: |
        sudo apt-get install \
          moreutils \

    - name: Set environment
      run: |
        COMMIT_MSG=$(git log --format=%B -n 1)
        COMMIT_MSG_HAS_DEPLOY=$( \
          echo $COMMIT_MSG | \
          grep "\[DEPLOY\]" -q && echo true || echo false \
        )
        IS_DEPLOY=$( \
          [[ \
            ( \
              '${{ github.event_name }}' == 'push' && \
              $COMMIT_MSG_HAS_DEPLOY == 'true' \
            ) || \
            ( \
             '${{ github.event_name }}' == 'workflow_dispatch' && \
             '${{ github.event.inputs.deploy }}' == 'true' \
            ) \
          ]] && echo true || echo false
        )
        WILL_BE_DEPLOYED=$([[ $COMMIT_MSG_HAS_DEPLOY == 'true' || $IS_DEPLOY ]] && echo true || echo false)
        echo "IS_DEPLOY=$IS_DEPLOY" >> $GITHUB_ENV
        echo "WILL_BE_DEPLOYED=$WILL_BE_DEPLOYED" >> $GITHUB_ENV

        IMAGE_NAME=$(make --silent docker_image_name)
        IMAGE_TAG=$(make --silent docker_image_tag)
        IMAGE_VERSION=$(make --silent docker_image_version)
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        echo "IMAGE_VERSION=$IMAGE_VERSION" >> $GITHUB_ENV

        REMOTE_IMAGE_NAME=$registry$IMAGE_NAME
        REMOTE_IMAGE_TAG=$registry$IMAGE_TAG
        REMOTE_IMAGE_LATEST=$REMOTE_IMAGE_NAME":latest"
        echo "REMOTE_IMAGE_NAME=$REMOTE_IMAGE_NAME" >> $GITHUB_ENV
        echo "REMOTE_IMAGE_TAG=$REMOTE_IMAGE_TAG" >> $GITHUB_ENV
        echo "REMOTE_IMAGE_LATEST=$REMOTE_IMAGE_LATEST" >> $GITHUB_ENV

        echo "DOCKER_CACHE_FROM=$REMOTE_IMAGE_LATEST" >> $GITHUB_ENV
    - name: "[DEPLOY] Login to image registry"
      if: env.WILL_BE_DEPLOYED == 'true'
      uses: docker/login-action@v1
      with:
        #registry: ${{ env.registry }} # uncomment for any registry except docker.io
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOCKEN }}
    - name: Download cache from registry
      # Here we assume that latest release have common layers that should speed up our build
      run: |
        docker manifest inspect $REMOTE_IMAGE_LATEST &> /dev/null && \
        docker pull $REMOTE_IMAGE_LATEST || echo "Cache was not loaded"
    - name: Build
      run: make $IMAGE_NAME
    - name: Test
      run: make check
    - name: Clean
      run: make clean
    - name: "[DEPLOY] Check there is not already such tag in registry"
      if: env.WILL_BE_DEPLOYED == 'true'
      run: $(docker manifest inspect $REMOTE_IMAGE_TAG &> /dev/null) && exit 1 || exit 0
    - name: "[DEPLOY] Push image to registry"
      if: env.IS_DEPLOY == 'true'
      run: |
        docker image tag $IMAGE_TAG $REMOTE_IMAGE_TAG
        docker image tag $IMAGE_TAG $REMOTE_IMAGE_LATEST
        docker image push $REMOTE_IMAGE_TAG
        docker image push $REMOTE_IMAGE_LATEST
    - name: "[DEPLOY] Tag commit"
      if: env.IS_DEPLOY == 'true'
      uses: tvdias/github-tagger@v0.0.1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        tag: "v${{ env.IMAGE_VERSION }}"

